#!/usr/bin/ruby

require "internal/const"
require "internal/command_dispatcher"
require "internal/cmds/init"
require "internal/cmds/push"
require "internal/cmds/pull"

# Functions
def usage(prog, cmdNames)
  puts "Usage: #{prog} [OPTIONS] command"
  puts "Optios:"
  puts "  -v, --version         Print version info and exit"
  puts "  -h, --help            Print help message and exit"
  puts ""
  puts "Commands:"
  cmdNames.each { |name|
    puts "  #{name}"
  }
end

# Main
cmd_dsp = GGEV::CommandDispatcher.new
cmd_dsp.add(GGEV::InitCommand.new)
cmd_dsp.add(GGEV::PushCommand.new)
cmd_dsp.add(GGEV::PullCommand.new)

## Options arguments,
#  Start with '-'.
n_opts = 0
ARGV.each { |arg|
  if arg[0]!='-'
    break
  end

  n_opts += 1
  if arg=='-v' or arg=='--version'
    specs = Gem::loaded_specs[GGEV::GEMNAME]
    if specs!=nil 
      puts "#{specs.name} #{specs.version}"
    else
      puts "local un-version(not gem)"
    end
    return
  elsif arg=='-h' or arg=='--help'
    usage($PROGRAM_NAME, cmd_dsp.names)
    return
  else
    puts "Unknown option \"#{arg}\""
    return
  end
}
ARGV.slice!(n_opts-1) if n_opts>0

## Command name
cmdname = ARGV.slice!(0)
if cmdname==nil 
  usage($PROGRAM_NAME, cmd_dsp.names)
  return
end
cmd_dsp.proc(cmdname, ARGV) or puts "Unknown command \"#{cmdname}\""

